/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Server;

import java.io.*;
import java.net.*;
import javax.swing.*;

/**
 *
 * @author HUSAIN
 */
public class ServerUI extends javax.swing.JFrame {

    private Socket socket;
    private PrintWriter out;
    private BufferedReader in;
    private ServerSocket serverSocket;
    private boolean serverRunning = false;

    /**
     * Creates new form ServerUI
     */
    public ServerUI() {
        initComponents();
        setLocalIPAddress();
    }

    private void setLocalIPAddress() {
        try {
            String localIP = InetAddress.getLocalHost().getHostAddress();
            Alamat_IP.setText(localIP); // Set the local IP automatically in the Alamat_IP field
        } catch (UnknownHostException ex) {
            jTextServer.append("Unable to get local IP address.\n");
        }
    }

    private void connect() {
        String ip = Alamat_IP.getText();
        int port;

        try {
            port = Integer.parseInt(Port.getText());

            // Start the server in a separate thread to avoid blocking the UI
            new Thread(() -> {
                try {
                    serverSocket = new ServerSocket(port);
                    appendLog("Server started successfully at IP " + ip + " on port " + port + "\n");
                    serverRunning = true;

                    // Wait for a connection
                    socket = serverSocket.accept();
                    out = new PrintWriter(socket.getOutputStream(), true);
                    in = new BufferedReader(new InputStreamReader(socket.getInputStream()));

                    appendLog("Client connected.\n");

                    // Disable the Connect button and enable the Disconnect button
                    SwingUtilities.invokeLater(() -> {
                        Connect_Server.setEnabled(false);  // Disable Connect button
                        Disconnect_Server.setEnabled(true); // Enable Disconnect button
                    });

                } catch (IOException ex) {
                    appendLog("Server error: " + ex.getMessage() + "\n");
                }
            }).start();  // Start the server in a new thread

        } catch (NumberFormatException ex) {
            appendLog("Invalid port number.\n");
        }
    }

    private void disconnect() {
        try {
            if (socket != null && !socket.isClosed()) {
                socket.close(); // Close the socket connection
                appendLog("Disconnected from the client.\n");
            }
            if (serverSocket != null && !serverSocket.isClosed()) {
                serverSocket.close(); // Close the server socket
            }

            // Enable the Connect button and disable the Disconnect button
            SwingUtilities.invokeLater(() -> {
                Connect_Server.setEnabled(true);  // Enable Connect button
                Disconnect_Server.setEnabled(false); // Disable Disconnect button
            });

            appendLog("Server stopped.\n");
            serverRunning = false;

        } catch (IOException ex) {
            appendLog("Error while disconnecting: " + ex.getMessage() + "\n");
        }
    }

    private void closeApp() {
        if (serverRunning) {
            disconnect(); // Close any active connections before exiting
        }
        System.exit(0); // Exit the application
    }

    private void appendLog(final String message) {
        // Ensure the log is updated in the UI thread
        SwingUtilities.invokeLater(() -> {
            jTextServer.append(message); // Append the log to jTextServer
            jTextServer.setCaretPosition(jTextServer.getDocument().getLength()); // Scroll to the end
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextServer = new javax.swing.JTextArea();
        Connect_Server = new javax.swing.JButton();
        Disconnect_Server = new javax.swing.JButton();
        CloseServer = new javax.swing.JButton();
        Alamat_IP = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        Port = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 204, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SERVER CONTROLLER");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jTextServer.setColumns(20);
        jTextServer.setRows(5);
        jScrollPane1.setViewportView(jTextServer);

        Connect_Server.setBackground(new java.awt.Color(51, 102, 0));
        Connect_Server.setForeground(new java.awt.Color(255, 255, 255));
        Connect_Server.setText("Connect");
        Connect_Server.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Connect_ServerActionPerformed(evt);
            }
        });

        Disconnect_Server.setBackground(new java.awt.Color(204, 0, 51));
        Disconnect_Server.setForeground(new java.awt.Color(255, 255, 255));
        Disconnect_Server.setText("Disconnect");
        Disconnect_Server.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Disconnect_ServerActionPerformed(evt);
            }
        });

        CloseServer.setBackground(new java.awt.Color(204, 153, 0));
        CloseServer.setForeground(new java.awt.Color(255, 255, 255));
        CloseServer.setText("Close");
        CloseServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseServerActionPerformed(evt);
            }
        });

        jLabel2.setText("Alamat IP");

        jLabel3.setText("Port");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(Connect_Server, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Disconnect_Server, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CloseServer, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 220, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Alamat_IP))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Port)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Alamat_IP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Port, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Connect_Server)
                    .addComponent(Disconnect_Server)
                    .addComponent(CloseServer))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Connect_ServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Connect_ServerActionPerformed
        connect();
    }//GEN-LAST:event_Connect_ServerActionPerformed

    private void Disconnect_ServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Disconnect_ServerActionPerformed
        disconnect();
    }//GEN-LAST:event_Disconnect_ServerActionPerformed

    private void CloseServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseServerActionPerformed
        closeApp();
    }//GEN-LAST:event_CloseServerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ServerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ServerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ServerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ServerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        java.awt.EventQueue.invokeLater(() -> new ServerUI().setVisible(true));
        /* Create and display the form */
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Alamat_IP;
    private javax.swing.JButton CloseServer;
    private javax.swing.JButton Connect_Server;
    private javax.swing.JButton Disconnect_Server;
    private javax.swing.JTextField Port;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextServer;
    // End of variables declaration//GEN-END:variables

}
